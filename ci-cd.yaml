name: CI/CD Cooperativa API

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    name: 🧪 Build & Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cooperativa
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd="rabbitmq-diagnostics -q ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⚙️ Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: 📦 Restore dependencies
        run: dotnet restore

      - name: 🧱 Build
        run: dotnet build --no-restore --configuration Release

      - name: ✅ Run Tests
        run: dotnet test --no-build --configuration Release --logger "trx"

  docker-deploy:
    name: 🐳 Docker Build & Push
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🔐 Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏗️ Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/cooperativa-api:latest .

      - name: 📤 Push image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/cooperativa-api:latest
